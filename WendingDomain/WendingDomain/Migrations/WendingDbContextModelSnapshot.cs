// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WendingDomain;

namespace WendingDomain.Migrations
{
    [DbContext(typeof(WendingDbContext))]
    partial class WendingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WendingDomain.Entities.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("StorageId");

                    b.Property<int>("Value");

                    b.Property<bool>("isAvailable");

                    b.HasKey("Id");

                    b.HasIndex("StorageId");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("WendingDomain.Entities.CoinStorage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountCoins");

                    b.HasKey("Id");

                    b.ToTable("Storage");
                });

            modelBuilder.Entity("WendingDomain.Entities.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count");

                    b.Property<string>("ImageUrl");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.Property<int?>("WendingMachineId");

                    b.Property<bool>("isAvailable");

                    b.HasKey("Id");

                    b.HasIndex("WendingMachineId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("WendingDomain.Entities.WendingMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance");

                    b.HasKey("Id");

                    b.ToTable("WendingMachine");
                });

            modelBuilder.Entity("WendingDomain.Entities.Coin", b =>
                {
                    b.HasOne("WendingDomain.Entities.CoinStorage", "Storage")
                        .WithMany("Coins")
                        .HasForeignKey("StorageId");
                });

            modelBuilder.Entity("WendingDomain.Entities.Drink", b =>
                {
                    b.HasOne("WendingDomain.Entities.WendingMachine", "WendingMachine")
                        .WithMany("Drinks")
                        .HasForeignKey("WendingMachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
